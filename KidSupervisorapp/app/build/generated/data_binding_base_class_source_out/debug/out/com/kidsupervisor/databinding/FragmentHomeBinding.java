// Generated by view binder compiler. Do not edit!
package com.kidsupervisor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kidsupervisor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAddKid;

  @NonNull
  public final Button btnAddSchedule;

  @NonNull
  public final Button btnDeleteSchedule;

  @NonNull
  public final Button btnModifySchedule;

  @NonNull
  public final ListView kidsList;

  @NonNull
  public final ListView scheduleList;

  @NonNull
  public final TextView scheduleText;

  @NonNull
  public final TextView txtListOfKids;

  @NonNull
  public final ConstraintLayout txtWeight;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAddKid,
      @NonNull Button btnAddSchedule, @NonNull Button btnDeleteSchedule,
      @NonNull Button btnModifySchedule, @NonNull ListView kidsList, @NonNull ListView scheduleList,
      @NonNull TextView scheduleText, @NonNull TextView txtListOfKids,
      @NonNull ConstraintLayout txtWeight) {
    this.rootView = rootView;
    this.btnAddKid = btnAddKid;
    this.btnAddSchedule = btnAddSchedule;
    this.btnDeleteSchedule = btnDeleteSchedule;
    this.btnModifySchedule = btnModifySchedule;
    this.kidsList = kidsList;
    this.scheduleList = scheduleList;
    this.scheduleText = scheduleText;
    this.txtListOfKids = txtListOfKids;
    this.txtWeight = txtWeight;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddKid;
      Button btnAddKid = ViewBindings.findChildViewById(rootView, id);
      if (btnAddKid == null) {
        break missingId;
      }

      id = R.id.btnAddSchedule;
      Button btnAddSchedule = ViewBindings.findChildViewById(rootView, id);
      if (btnAddSchedule == null) {
        break missingId;
      }

      id = R.id.btnDeleteSchedule;
      Button btnDeleteSchedule = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteSchedule == null) {
        break missingId;
      }

      id = R.id.btnModifySchedule;
      Button btnModifySchedule = ViewBindings.findChildViewById(rootView, id);
      if (btnModifySchedule == null) {
        break missingId;
      }

      id = R.id.kidsList;
      ListView kidsList = ViewBindings.findChildViewById(rootView, id);
      if (kidsList == null) {
        break missingId;
      }

      id = R.id.scheduleList;
      ListView scheduleList = ViewBindings.findChildViewById(rootView, id);
      if (scheduleList == null) {
        break missingId;
      }

      id = R.id.scheduleText;
      TextView scheduleText = ViewBindings.findChildViewById(rootView, id);
      if (scheduleText == null) {
        break missingId;
      }

      id = R.id.txtListOfKids;
      TextView txtListOfKids = ViewBindings.findChildViewById(rootView, id);
      if (txtListOfKids == null) {
        break missingId;
      }

      ConstraintLayout txtWeight = (ConstraintLayout) rootView;

      return new FragmentHomeBinding((ConstraintLayout) rootView, btnAddKid, btnAddSchedule,
          btnDeleteSchedule, btnModifySchedule, kidsList, scheduleList, scheduleText, txtListOfKids,
          txtWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
